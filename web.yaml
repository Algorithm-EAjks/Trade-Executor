# This is an **example** API to demonstrate features of OpenAPI specification.
# It doesn't cover all OpenAPI features. For more full example check out: https://github.com/APIs-guru/petstore_extended

openapi: 3.0.2
info:
  version: '1.0.0' # Your API version

  title: TradingStrategy.ai web

  contact:
    email: mikko@tradingstrategy.ai # [Optional] Replace with your contact email
    url: 'https://tradingstrategy.ai' # [Optional] Replace with link to your contact form
  license:
    name: GNU AFFERO GENERAL PUBLIC LICENSE 3
    url: 'https://github.com/tradingstrategy-ai/spec/blob/main/LICENSE'
  x-logo:
    url: 'https://github.com/tradingstrategy-ai/frontend/blob/master/src/lib/assets/logo-two-lines.svg'

  # Describe your API here, you can use GFM (https://guides.github.com/features/mastering-markdown) here
  description: |

    This API describes access website publishablee data for [Trading Strategy](https://tradingstrategy.ai/).

    # Introduction

    Website backend servers data from the oracle to have easy human-readable access to exchanges, trading pairs,
    signals and trading view.

    These APIs are aimed to be consumed in the server-side frontend rendering and through direct web browser
    JavaScript client acceses.

    # OpenAPI Specification

    The goal of The OpenAPI Specification is to define a standard, language-agnostic interface to REST APIs which
    allows both humans and computers to discover and understand the capabilities of the service without access to source
    code, documentation, or through network traffic inspection. When properly defined via OpenAPI, a consumer can
    understand and interact with the remote service with a minimal amount of implementation logic. Similar to what
    interfaces have done for lower-level programming, OpenAPI removes the guesswork in calling the service.

externalDocs:
  description: TradingStrategy Python client documentation
  url: 'https://tradingstrategy.ai/docs/'

# A list of tags used by the definition with additional metadata.
# The order of the tags can be used to reflect on their order by the parsing tools.
tags:
  - name: Exchange
    description: Data about decentralised exchanges
servers:
  - url: 'https://matilda.tradingstrategy.ai/web'

# Holds the relative paths to the individual endpoints. The path is appended to the
# basePath in order to construct the full URL.
paths:
  '/exchanges':
    x-pyramid-route-name: web_exchanges
    get:
      operationId: web_exchanges
      summary: List of available exchanges
      tags:
        - Exchange
      responses: # list of responses
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExchangeSummaryListing"

  '/exchange-details':
    x-pyramid-route-name: web_exchange_details
    get:
      operationId: web_exchange_details
      summary: Get data for one exchange to render the exchange page
      parameters:
        - name: exchange-slug
          in: query
          description: Exchange path slug e.g, "uniswap-v2"
          required: true
          schema:
            type: string
        - name: chain-slug
          in: query
          description: Blockchain slug, e.g, "ethereum"
          required: true
          schema:
            type: string

      tags:
        - Exchange
      responses: # list of responses
        '200':
          description: OK
          content:
            application/json: # operation response mime type
              schema: # response schema can be specified for each response
                $ref: '#/components/schemas/ExchangeDetails'
        '404':
          description: Exchange not found - either chain or exchange slug does not match

# An object to hold reusable parts that can be used across the definition
components:
  schemas:
    ExchangeSummaryListing:
      type: object
      properties:
        exchanges:
          type: array
          items:
            $ref: "#/components/schemas/ExchangeSummary"
    ExchangeSummary:
      type: object
      properties:
        notable:
          description: Should be shown by default
          type: boolean
          example: true
        exchange_id:
          description: Primary key for exchange
          type: integer
          example: 1
        chain_id:
          description: Ethereum chain id for the blockchain this exchange runs on, from https://chainlist.org/
          type: integer
          example: 1
        exchange_slug:
          description: URL slug for the exchange
          type: string
          example: uniswap_v2
        chaiin_slug:
          description: URL slug for the blockchain on which this exchange runs
          type: string
          example: ethereum
        human_readable_name:
          description: Human readable name for this exchange. If there is no known name, then it is generated based on the address.
          type: string
          minLength: 4
          example: Uniswap (v2)
        address:
          description: Ethereum address, non-checksummed, for the exchange factory
          type: string
          minLength: 4
          example: 0x0
        exchange_type:
          description: Exchange type enum - see https://tradingstrategy.ai/docs/programming/api/exchange.html#tradingstrategy.exchange.ExchangeType
          type: string
          minLength: 4
          example: uni_v2
        usd_volume_30d:
          description: USD volume for the last 30 days
          type: number
          example: 100000.00
    ExchangeDetails:
      type: object
      properties:
        exchange_id:
          description: Machine readable string id for this exchange.
          type: string
          minLength: 4
          example: uniswap_v2
        human_readable_name:
          description: Human readable name for this exchange
          type: string
          minLength: 4
          example: Uniswap
        homepage:
          description: Link to the exchange trade page
          type: string
          format: uri
          example: https://uniswap.org
        twitter:
          description: Link to the exchange Twitter
          type: string
          format: uri
          example: https://twitter.com/uniswap
        explorer:
          description: Link to a smart contract explorer showing the main contract
          type: string
          format: uri
          example: https://etherscan.io
        address:
          description: The factory address for Uniswap AMM like setups
          example: 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f
        buy_volume_30d:
          description: Buy USD volume for the last 30 days
          type: number
          example: 100000.00
        sell_volume_30d:
          description: Sell USD volume for the last 30 days
          type: number
          example: 100000.00
        buy_volume_all_time:
          description: Buy USD volume for all time
          type: number
          example: 100000.00
        sell_volume_all_time:
          description: Sell USD volume for all time
          type: number
          example: 100000.00
        buy_count_all_time:
          description: Number of individual buy transactions
          type: integer
          example: 1
        sell_count_all_time:
          description: Number of individual sell transactions
          type: integer
          example: 1

    PairSummary:
      type: object
      properties:
        pair_id:
          description: Primary key for exchange
          type: integer
          example: 1
        exchange_id:
          description: Exchange primary key where this token trades
          type: integer
          example: 1
        chain_id:
          description: Ethereum chain id for the blockchain this exchange runs on, from https://chainlist.org/
          type: integer
          example: 1
        base_token:
          description: Token that is being bought
          type: string
          example: WETH
        quote_token:
          description: Token that is used as a currency
          type: string
          example: USDC
        address:
          description: Uniswap pool contract address
          type: string
          minLength: 4
          example: 0x0
          format: Ethereum address
        usd_volume_30d:
          description: USD volume for the last 30 days
          type: number
          example: 100000.00
